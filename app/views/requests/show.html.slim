- breadcrumb :request, @request
.list-group
  a.list-group-item
    - if @request.flow
      h4.list-group-item-heading
        strong = Request.human_attribute_name(:flow)
      p.list-group-item-text
        = @request.flow.try(:title)
    - if @request.category
      h4.list-group-item-heading
        strong = Request.human_attribute_name(:category)
      p.list-group-item-text
        = @request.category.try(:name)
    - if @request.sub_category
      h4.list-group-item-heading
        strong = Request.human_attribute_name(:subcategory)
      p.list-group-item-text
        = @request.sub_category.try(:name)
    h4.list-group-item-heading
      strong = Request.human_attribute_name(:user)
    p.list-group-item-text
      = @request.user.name
    h4.list-group-item-heading
      strong = Request.human_attribute_name(:title)
    p.list-group-item-text
      = @request.title
    h4.list-group-item-heading
      strong = Request.human_attribute_name(:description)
    p.list-group-item-text
      = @request.description

  - if @request.costs.present?
    h2 = RequestCost.model_name.human
    .list-group
      - @request.costs.each do |cost|
        a.list-group-item
          h4.list-group-item-heading
            strong = RequestCost.human_attribute_name(:cost_price_type)
          p.list-group-item-text
            = cost.cost_price_type_text
          h4.list-group-item-heading
            strong = RequestCost.human_attribute_name(:initial_cost)
          p.list-group-item-text
            = cost.initial_cost
          h4.list-group-item-heading
            strong = RequestCost.human_attribute_name(:price)
          p.list-group-item-text
            = cost.price
          h4.list-group-item-heading
            strong = RequestCost.human_attribute_name(:time_required)
          p.list-group-item-text
            = cost.time_required
          h4.list-group-item-heading
            strong = RequestCost.human_attribute_name(:person_number)
          p.list-group-item-text
            = cost.person_number

  - if @request.request_grants.present?
    h2 承認状況
    .list-group
      - @request.request_grants.order(:position).each do |request_grant|
        - request_grant = ActiveDecorator::Decorator.instance.decorate(request_grant)
        .list-group-item
          = request_grant.position
          '
          = request_grant.authenticatable_role_text
          '
          = request_grant.authenticated_user.try(:name)
          '
          span[class="#{request_grant.status_label_class}"]
            = request_grant.status_text



- if RequestFlowPolicy.new(request: @request).reviewable?(current_user)

= link_to 'Back', requests_path, class: 'btn btn-default'
